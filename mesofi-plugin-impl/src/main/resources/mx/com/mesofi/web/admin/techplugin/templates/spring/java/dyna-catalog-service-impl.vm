/*
 * COPYRIGHT. Mesofi ${year}. ALL RIGHTS RESERVED.
 *
 * This software is only to be used for the purpose for which it has been
 * provided. No part of it is to be reproduced, disassembled, transmitted,
 * stored in a retrieval system nor translated in any human or computer
 * language in any way or for any other purposes whatsoever without the
 * prior written consent of Mesofi.
 */
package ${packageName}.service;

import java.util.List;

import ${packageName}.${suffixPersistencePackageName}.${classNamePersistence};
import ${packageName}.${suffixModelPackageName}.${classNameModel};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Direct implementation for ${className}.
 * Template name: [${templateName}]
 * 
 * @author Mesofi
 * @since ${date}
 */
@Service(value = "${className.substring(0,1).toLowerCase()}${className.substring(1)}")
public class ${className}Impl implements ${className} {
    
    @Autowired
    private ${classNamePersistence} ${classNamePersistence.substring(0,1).toLowerCase()}${classNamePersistence.substring(1)};
    
    /**
     * {@inheritDoc}
     */
     @Override
    public void saveChanges(${classNameModel} ${classNameModel.substring(0,1).toLowerCase()}${classNameModel.substring(1)}, boolean isNewRecord) {
        if (isNewRecord) {
            // saves the current record
            ${classNamePersistence.substring(0,1).toLowerCase()}${classNamePersistence.substring(1)}.saveRecord(${classNameModel.substring(0,1).toLowerCase()}${classNameModel.substring(1)});
        } else {
            // edits the current record
            ${classNamePersistence.substring(0,1).toLowerCase()}${classNamePersistence.substring(1)}.updateRecord(${classNameModel.substring(0,1).toLowerCase()}${classNameModel.substring(1)});
        }
    }
    
    /**
     * {@inheritDoc}
     */
    @Override
    public List<$classNameModel> getData() {
        return ${classNamePersistence.substring(0,1).toLowerCase()}${classNamePersistence.substring(1)}.getData();
    }
    
    /**
     * {@inheritDoc}
     */
    @Override
    public List<$classNameModel> getData(${classNameModel} ${classNameSearch.substring(0,1).toLowerCase()}${classNameSearch.substring(1)}) {
        return ${classNameSearch.substring(0,1).toLowerCase()}${classNameSearch.substring(1)} == null ? getData() : ${classNamePersistence.substring(0,1).toLowerCase()}${classNamePersistence.substring(1)}.getData(${classNameSearch.substring(0,1).toLowerCase()}${classNameSearch.substring(1)});
    }
    
}