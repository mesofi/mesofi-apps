/*
 * COPYRIGHT. Mesofi ${year}. ALL RIGHTS RESERVED.
 *
 * This software is only to be used for the purpose for which it has been
 * provided. No part of it is to be reproduced, disassembled, transmitted,
 * stored in a retrieval system nor translated in any human or computer
 * language in any way or for any other purposes whatsoever without the
 * prior written consent of Mesofi.
 */
package ${packageName}.common;

import org.springframework.context.ApplicationContext;

/**
 * This class is used as a singleton to store the spring application context.
 * 
 * @author Mesofi
 * @since ${date}
 */
public class SpringContext {
    /**
     * Spring context.
     */
    private static final SpringContext springContext = new SpringContext();

    /**
     * The Spring Application Context.
     */
    private ApplicationContext applicationContext;

    /**
     * Creates an object from this same class.
     */
    private SpringContext() {
        // private constructor.
    }

    /**
     * Gets a single instance.
     * 
     * @return The spring context.
     */
    public static SpringContext getInstance() {
        return springContext;
    }
    
    /**
     * Retrieves a spring bean from SpringContext.
     * 
     * @param beanName
     *            An existing spring bean name.
     * @return An existing spring bean retrieved from SpringContext.
     */
    public Object getBean(String beanName) {
        return applicationContext.getBean(beanName);
    }
    
    /**
     * @param applicationContext
     *            the applicationContext to set
     */
    public void setApplicationContext(final ApplicationContext applicationContext) {
        this.applicationContext = applicationContext;
    }

    /**
     * @return the applicationContext
     */
    public ApplicationContext getApplicationContext() {
        return applicationContext;
    }

}